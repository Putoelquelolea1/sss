local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
   Name = "Legends Of Speed âš¡",
   LoadingTitle = "Yes",
   LoadingSubtitle = "by RatatuiHelp#0267",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "V8xtqQzhdk", -- The Discord invite code, do not include discord.gg/
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Yes Hub",
      Subtitle = "Key System",
      Note = "Join the discord (discord.gg/V8xtqQzhdk)",
      FileName = "Yes Key",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = "5absloop0axLpN"
   }
})

local Pla = Window:CreateTab("Player", 4483362458) -- Title, Image
local Farm = Window:CreateTab("Farm", 4483362458) -- Title, Image
local cofre = Window:CreateTab("Chest", 4483362458) -- Title, Image


local Toggle = Farm:CreateToggle({
    Name = "Auto Collect Hoops",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().autocollect = t
        spawn(function()
            while getgenv().autocollect == true and wait(1) do
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-576, 4, 391)
                for i, v in pairs(game:GetService("Workspace").Hoops:GetDescendants()) do
                    if v:IsA("MeshPart") then
                        v.CFrame = CFrame.new(-576, 4, 391)
                        v.Transparency = 1
                        v.PointLight:Destroy()
                        for i, c in pairs(v:GetDescendants()) do
                            if c:IsA("ParticleEmitter") then
                                c:Destroy()
                                
                            end
                            end
                    end
                end            
            end
        end)
    end,
 })

 local Toggle = Farm:CreateToggle({
    Name = "Auto Collect Orbs",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().autorebirths = t
        spawn(function()
            while getgenv().autorebirths == true and wait(1) do
                for i, v in pairs(game:GetService("Workspace").orbFolder.City:GetDescendants()) do
                    if v.Name:find("Orb") then
                    for i, c in pairs(v:GetDescendants()) do
                        if c:IsA("Part") then
                            c.Position = Vector3.new(-576, 4, 391)
                    end
                    end
                    end
                    end
            end
        end)
    end,
 })

 local Toggle = Farm:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().autorebirth = t
        spawn(function()
            while getgenv().autorebirth == true and wait(1) do
             local rebirth = "rebirthRequest"
                game:GetService("ReplicatedStorage").rEvents.rebirthEvent:FireServer(rebirth)
                
                
            end
        end)
    end,
 })

 local Toggle = Farm:CreateToggle({
    Name = "Auto Collect Treasure",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().autocollecttreasure = t
        spawn(function()
            while getgenv().autocollecttreasure == true and wait() do
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-493, 4, 399)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-670, 65, -267)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2241, 316, 1017)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2494, 21, -2119)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1614, 23, -495)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-591, 73, 2144)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1577, 103, 5679)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2486, 69, 3991)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-493, 4, 399)
                wait(0.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-493, 4, 399)
                wait(0.1)
if getgenv().autocollecttreasure == false then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-576, 4, 391)
end                           
            end
        end)
    end,
 })

 local Toggle = Farm:CreateToggle({
    Name = "Auto Collect Gems",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().autocollectgems = t
        spawn(function()
            while getgenv().autocollectgems == true and wait(1) do
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-576, 4, 391)
                for i, v in pairs(game:GetService("Workspace").orbFolder.City:GetDescendants()) do
                    if v.Name == "Gem" then
                        for i, c in pairs(v:GetDescendants()) do
                            if c:IsA("MeshPart") then
                                local mepos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                                c.CFrame = CFrame.new(-576, 4, 391)
                                c.Transparency = 1
                            end
                        end
                    end
                end
                         
            end
        end)
    end,
 })

 local Toggle = Farm:CreateToggle({
    Name = "AFK 2K Steps",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().autocollectgemsca = t
        spawn(function()
            while getgenv().autocollectgemsca == true and wait() do
                local args = {
                    [1] = "travelToArea",
                    [2] = workspace.areaCircles.pirateAreaCircle
                }
                
                game:GetService("ReplicatedStorage").rEvents.areaTravelRemote:InvokeServer(unpack(args))
                
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1577, 103, 5679)
                
                if getgenv().autocollectgemsca == false then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-576, 4, 391)
                end          
            end
        end)
    end,
 })

 local Slider = cofre:CreateSlider({
    Name = "Cooldown | Open Chest",
    Range = {0, 10},
    Increment = 0.1,
    Suffix = "Steps",
    CurrentValue = 0,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(t)
     getgenv().cooldown = t
    end,
 })

 local Toggle = cofre:CreateToggle({
    Name = "Auto Open 1k Chest",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().milchest = t
        spawn(function()
            while getgenv().milchest == true and wait(0) do
                local args = {
                    [1] = "openCrystal",
                    [2] = "Purple Crystal"
                }
                
                game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
                wait(getgenv().cooldown)
                       
            end
        end)
    end,
 })

 local Toggle = cofre:CreateToggle({
    Name = "Auto Open 2.5k Chest",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().milchest1 = t
        spawn(function()
            while getgenv().milchest1 == true and wait(0) do
                local args = {
                    [1] = "openCrystal",
                    [2] = "Lightning Crystal"
                }
                
                game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
                
                wait(getgenv().cooldown)
                       
            end
        end)
    end,
 })

 local Toggle = cofre:CreateToggle({
    Name = "Auto Open 4k Chest",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().milchest2 = t
        spawn(function()
            while getgenv().milchest2 == true and wait(0) do
                local args = {
                    [1] = "openCrystal",
                    [2] = "Snow Crystal"
                }
                
                game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
                
                wait(getgenv().cooldown)
                       
            end
        end)
    end,
 })

 local Toggle = cofre:CreateToggle({
    Name = "Auto Open 8k Chest",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().milchest3 = t
        spawn(function()
            while getgenv().milchest3 == true and wait(0) do
                local args = {
                    [1] = "openCrystal",
                    [2] = "Lava Crystal"
                }
                
                game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
                
                wait(getgenv().cooldown)
                       
            end
        end)
    end,
 })

 local Toggle = cofre:CreateToggle({
    Name = "Auto Open 8k Chest | 2",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().milchest4 = t
        spawn(function()
            while getgenv().milchest4 == true and wait(0) do
                local args = {
                    [1] = "openCrystal",
                    [2] = "Inferno Crystal"
                }
                
                game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
                
                wait(getgenv().cooldown)
                       
            end
        end)
    end,
 })

 local Toggle = cofre:CreateToggle({
    Name = "Auto Open 100k Chest | ",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().milchest5 = t
        spawn(function()
            while getgenv().milchest5 == true and wait(0) do
                local args = {
                    [1] = "openCrystal",
                    [2] = "Electro Legends Crystal"
                }
                
                game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args))
                
                wait(getgenv().cooldown)
                       
            end
        end)
    end,
 })

 local Slider = Pla:CreateSlider({
    Name = "Walkspeed",
    Range = {0, 10000},
    Increment = 1,
    Suffix = "Steps",
    CurrentValue = 250,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(t)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = t
    end,
 })

 local Slider = Pla:CreateSlider({
    Name = "Jump Power",
    Range = {0, 500},
    Increment = 1,
    Suffix = "Steps",
    CurrentValue = 50,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(t)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = t
    end,
 })

 local Toggle = Pla:CreateToggle({
    Name = "Inf Jump",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(t)
        getgenv().chamsa = t
                local mouse = game:GetService("Players").LocalPlayer:GetMouse()
                
                mouse.KeyDown:connect(function(key)
                    if getgenv().chamsa == true and key == " "  then
        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState(3)
        end
        end)
    end,
 })
